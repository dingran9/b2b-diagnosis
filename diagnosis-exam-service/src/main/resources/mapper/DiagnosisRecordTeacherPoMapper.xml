<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.eedu.diagnosis.exam.persist.dao.DiagnosisRecordTeacherPoMapper">
    <resultMap id="BaseResultMap" type="com.eedu.diagnosis.exam.persist.po.DiagnosisRecordTeacherPo">
        <id column="code" property="code" jdbcType="VARCHAR"/>
        <result column="use_type" property="useType" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="start_time" property="startTime" jdbcType="TIMESTAMP"/>
        <result column="end_time" property="endTime" jdbcType="TIMESTAMP"/>
        <result column="school_code" property="schoolCode" jdbcType="INTEGER"/>
        <result column="school_name" property="schoolName" jdbcType="VARCHAR"/>
        <result column="diagnosis_name" property="diagnosisName" jdbcType="VARCHAR"/>
        <result column="stage_code" property="stageCode" jdbcType="INTEGER"/>
        <result column="grade_code" property="gradeCode" jdbcType="INTEGER"/>
        <result column="subject_code" property="subjectCode" jdbcType="INTEGER"/>
        <result column="art_type" property="artType" jdbcType="INTEGER"/>
        <result column="teacher_code" property="teacherCode" jdbcType="INTEGER"/>
        <result column="teacher_name" property="teacherName" jdbcType="VARCHAR"/>
        <result column="diagnosis_type" property="diagnosisType" jdbcType="INTEGER"/>
        <result column="exam_type" property="examType" jdbcType="INTEGER"/>
        <result column="exam_scope" property="examScope" jdbcType="INTEGER"/>
        <result column="exam_year" property="examYear" jdbcType="VARCHAR"/>
        <result column="diagnosis_paper_code" property="diagnosisPaperCode" jdbcType="VARCHAR"/>
        <result column="diagnosis_paper_name" property="diagnosisPaperName" jdbcType="VARCHAR"/>
        <result column="is_snapshot" property="isSnapshot" jdbcType="INTEGER"/>
        <result column="unit_code" property="unitCode" jdbcType="VARCHAR"/>
        <result column="unit_name" property="unitName" jdbcType="VARCHAR"/>
        <result column="group_area_district_id" property="groupAreaDistrictId" jdbcType="INTEGER"/>
        <result column="group_area_district_name" property="groupAreaDistrictName" jdbcType="VARCHAR"/>
        <result column="has_class_report_count" property="hasClassReportCount" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    code,use_type, art_type,create_time, update_time, start_time, end_time,school_code,school_name,diagnosis_name, stage_code, grade_code, subject_code, teacher_code,
    teacher_name, diagnosis_type, exam_type,exam_scope,exam_year, diagnosis_paper_code, diagnosis_paper_name, is_snapshot,unit_code,unit_name,group_area_district_id,group_area_district_name
  </sql>
    <select id="DiagnosisRecordTeacherPo_getAll" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM diagnosis_record_teacher ORDER BY create_time DESC
    </select>
    <select id="DiagnosisRecordTeacherPo_getById" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM diagnosis_record_teacher WHERE code = #{code,jdbcType=VARCHAR}
    </select>
    <delete id="DiagnosisRecordTeacherPo_deleteByPrimaryKey" parameterType="java.lang.String">
    delete from diagnosis_record_teacher
    where code = #{code,jdbcType=VARCHAR}
  </delete>
    <insert id="DiagnosisRecordTeacherPo_insert"
            parameterType="com.eedu.diagnosis.exam.persist.po.DiagnosisRecordTeacherPo">
        insert into diagnosis_record_teacher (code, diagnosis_name,use_type, art_type,create_time, update_time,
      start_time, end_time, school_code,school_name,stage_code,
      grade_code, subject_code, teacher_code, teacher_name,
      diagnosis_type, exam_type,exam_scope, exam_year,diagnosis_paper_code, diagnosis_paper_name,
      is_snapshot,unit_code,unit_name,group_area_district_id,group_area_district_name)
    values (#{code,jdbcType=VARCHAR},#{diagnosisName,jdbcType=VARCHAR},#{useType,jdbcType=INTEGER}, #{artType,jdbcType=INTEGER},#{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{schoolCode,jdbcType=INTEGER}, #{schoolName,jdbcType=VARCHAR},#{stageCode,jdbcType=INTEGER},
      #{gradeCode,jdbcType=INTEGER}, #{subjectCode,jdbcType=INTEGER}, #{teacherCode,jdbcType=INTEGER}, #{teacherName,jdbcType=VARCHAR},
      #{diagnosisType,jdbcType=INTEGER},#{examType,jdbcType=INTEGER},#{examScope,jdbcType=INTEGER},#{examYear,jdbcType=VARCHAR}, #{diagnosisPaperCode,jdbcType=VARCHAR}, #{diagnosisPaperName,jdbcType=VARCHAR},
      #{isSnapshot,jdbcType=INTEGER},#{unitCode,jdbcType=VARCHAR},#{unitName,jdbcType=VARCHAR},#{groupAreaDistrictId,jdbcType=INTEGER},#{groupAreaDistrictName,jdbcType=VARCHAR})
  </insert>
    <insert id="DiagnosisRecordTeacherPo_batch_insert" parameterType="java.util.List">
        insert into diagnosis_record_teacher (code, diagnosis_name,use_type, art_type,create_time, update_time,
        start_time, end_time, school_code,school_name,stage_code,
        grade_code, subject_code, teacher_code, teacher_name,
        diagnosis_type, exam_type,exam_scope, exam_year,diagnosis_paper_code, diagnosis_paper_name,
        is_snapshot,unit_code,unit_name,group_area_district_id,group_area_district_name)
        values
        <foreach collection="list" index="index" item="item" separator=",">
            (#{item.code,jdbcType=VARCHAR},#{item.diagnosisName,jdbcType=VARCHAR},#{item.useType,jdbcType=INTEGER},
            #{item.artType,jdbcType=INTEGER},#{item.createTime,jdbcType=TIMESTAMP},
            #{item.updateTime,jdbcType=TIMESTAMP},
            #{item.startTime,jdbcType=TIMESTAMP}, #{item.endTime,jdbcType=TIMESTAMP},
            #{item.schoolCode,jdbcType=INTEGER}, #{item.schoolName,jdbcType=VARCHAR},#{item.stageCode,jdbcType=INTEGER},
            #{item.gradeCode,jdbcType=INTEGER}, #{item.subjectCode,jdbcType=INTEGER},
            #{item.teacherCode,jdbcType=INTEGER}, #{item.teacherName,jdbcType=VARCHAR},
            #{item.diagnosisType,jdbcType=INTEGER}
            ,#{item.examType,jdbcType=INTEGER},#{item.examScope,jdbcType=INTEGER},#{item.examYear,jdbcType=VARCHAR},#{item.diagnosisPaperCode,jdbcType=VARCHAR},
            #{item.diagnosisPaperName,jdbcType=VARCHAR},
            #{item.isSnapshot,jdbcType=INTEGER},#{item.unitCode,jdbcType=VARCHAR},#{item.unitName,jdbcType=VARCHAR},
            #{item.groupAreaDistrictId,jdbcType=INTEGER},#{item.groupAreaDistrictName,jdbcType=VARCHAR})
        </foreach>

    </insert>
    <update id="DiagnosisRecordTeacherPo_updateByPrimaryKeySelective"
            parameterType="com.eedu.diagnosis.exam.persist.po.DiagnosisRecordTeacherPo">
        update diagnosis_record_teacher
        <set>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="startTime != null">
                start_time = #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                end_time = #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="schoolCode != null">
                school_code = #{schoolCode,jdbcType=VARCHAR},
            </if>
            <if test="schoolName != null">
                school_name = #{schoolName,jdbcType=VARCHAR},
            </if>
            <if test="stageCode != null">
                stage_code = #{stageCode,jdbcType=INTEGER},
            </if>
            <if test="gradeCode != null">
                grade_code = #{gradeCode,jdbcType=INTEGER},
            </if>
            <if test="subjectCode != null">
                subject_code = #{subjectCode,jdbcType=INTEGER},
            </if>
            <if test="teacherCode != null">
                teacher_code = #{teacherCode,jdbcType=VARCHAR},
            </if>
            <if test="teacherName != null">
                teacher_name = #{teacherName,jdbcType=VARCHAR},
            </if>
            <if test="diagnosisType != null">
                diagnosis_type = #{diagnosisType,jdbcType=INTEGER},
            </if>
            <if test="diagnosisPaperCode != null">
                diagnosis_paper_code = #{diagnosisPaperCode,jdbcType=VARCHAR},
            </if>
            <if test="diagnosisPaperName != null">
                diagnosis_paper_name = #{diagnosisPaperName,jdbcType=VARCHAR},
            </if>
            <if test="isSnapshot != null">
                is_snapshot = #{isSnapshot,jdbcType=INTEGER},
            </if>
        </set>
        where code = #{code,jdbcType=VARCHAR}
    </update>

    <sql id="diagnosis_record_teacher_where_sql">
        <if test="code != null">
            and code = #{code}
        </if>
        <if test="codes != null">
            and code in
            <foreach collection="codes" item="item" index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="useType != null">
            and use_type = #{useType}
        </if>
        <if test="artType != null">
            and art_type = #{artType}
        </if>
        <if test="teacherCode != null">
            and teacher_code = #{teacherCode}
        </if>
        <if test="schoolCode != null">
            and school_code = #{schoolCode}
        </if>
        <if test="stageCode != null">
            and stage_code = #{stageCode}
        </if>
        <if test="gradeCode != null">
            and grade_code = #{gradeCode}
        </if>
        <if test="subjectCode != null">
            and subject_code = #{subjectCode}
        </if>
        <if test="diagnosisType != null">
            and diagnosis_type = #{diagnosisType}
        </if>
        <if test="examType != null">
            and exam_type = #{examType}
        </if>
        <if test="examScope != null">
            and exam_scope = #{examScope}
        </if>
        <if test="examYear != null">
            and exam_year = #{examYear}
        </if>
        <if test="isSnapshot != null">
            and is_snapshot = #{isSnapshot}
        </if>
        <if test="startTime != null">
            and start_time = #{startTime,jdbcType=TIMESTAMP}
        </if>
        <if test="endTime != null">
            and end_time = #{endTime,jdbcType=TIMESTAMP}
        </if>
        <if test="schoolName != null">
            and school_name = #{schoolName,jdbcType=VARCHAR}
        </if>
        <if test="teacherName != null">
            and teacher_name = #{teacherName,jdbcType=VARCHAR}
        </if>
        <if test="diagnosisPaperCode != null">
            and diagnosis_paper_code = #{diagnosisPaperCode,jdbcType=VARCHAR}
        </if>
        <if test="diagnosisPaperName != null">
            and diagnosis_paper_name = #{diagnosisPaperName,jdbcType=VARCHAR}
        </if>
        <if test="unitCode != null">
            and unit_code = #{diagnosisPaperCode,jdbcType=VARCHAR}
        </if>
        <if test="unitName != null">
            and unit_name = #{unitName,jdbcType=VARCHAR}
        </if>
        <if test="groupAreaDistrictId != null">
            and group_area_district_id = #{groupAreaDistrictId,jdbcType=INTEGER}
        </if>
        <if test="groupAreaDistrictName != null">
            and group_area_district_name = #{groupAreaDistrictName,jdbcType=VARCHAR}
        </if>
        <if test="createTime != null">
            and unix_timestamp(create_time)*1000 &gt; #{createTime,jdbcType=TIMESTAMP}
        </if>
    </sql>

    <select id="DiagnosisRecordTeacherPo_findByParameter" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM diagnosis_record_teacher
        <where>
            <include refid="diagnosis_record_teacher_where_sql"/>
        </where>
        <if test="orderProperty != null">
            order by ${orderProperty} ${orderDirection}
        </if>
    </select>

    <select id="get_diagnosis_list_with_report_count" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT
        DISTINCT t.*,(select count(*) from diagnosis_class_relation where diagnosis_record_code = t.code and has_report
        = 1 and
        is_read = 0) as has_class_report_count
        FROM
        diagnosis_record_teacher t,diagnosis_class_relation dcr
        WHERE
        t.`code` = dcr.diagnosis_record_code AND t.exam_type = 0
        <if test="codes != null">
            AND t.`code` in
            <foreach collection="codes" item="item" index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            and dcr.subject_code = #{subjectCode}
        </if>
        <if test="teacherCode != null">
            and dcr.teacher_code = #{teacherCode}
        </if>
        <if test="examYear != null">
            and t.exam_year = #{examYear}
        </if>

        <if test="orderProperty != null">
            order by ${orderProperty} ${orderDirection}
        </if>
    </select>
    <select id="getDiagnosisListForMaster" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT
        drt.*,dcr.diagnosis_record_code diagnosis_record_code
        FROM
        diagnosis_record_teacher drt LEFT JOIN diagnosis_class_relation dcr ON drt.`code` = dcr.diagnosis_record_code
        WHERE
        dcr.school_code = #{schoolCode}
        <!-- AND drt.diagnosis_type = 1 -->
        AND drt.exam_type IN (1,2,3,4,5,6)
        <if test="gradeCode != null">
            AND drt.grade_code = #{gradeCode}
        </if>
        <if test="examYear != null">
            AND drt.exam_year = #{examYear}
        </if>
        <!-- Start 区域考试 教师能看到考试列表 校长不可见  如果有一天 教师和校长都可以看到列表时 将下面的 drt.exam_scope 条件去掉即可-->
        <if test="teacherCode != null">
            AND dcr.teacher_code = #{teacherCode}
            AND drt.exam_scope IN (2,3,4)
        </if>
        <if test="teacherCode == null">
            AND drt.exam_scope = 2
        </if>
        <!-- End drt.exam_scope   -->

        <if test="subjectCode != null">
            AND dcr.subject_code = #{subjectCode}
        </if>
        <if test="isRead != null">
            AND dcr.is_read = #{isRead}
        </if>
        <if test="classCodes != null">
            AND dcr.class_code IN
            <foreach collection="classCodes" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        GROUP BY dcr.diagnosis_record_code
        ORDER BY drt.create_time DESC

    </select>


    <select id="DiagnosisRecordTeacherPo_batch_listByIds" resultMap="BaseResultMap" parameterType="java.util.List">
        SELECT
        <include refid="Base_Column_List"/>
        FROM diagnosis_record_teacher
        <if test="list.size() > 0">
            where code in
            <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        ORDER BY create_time DESC
    </select>
    <delete id="DiagnosisRecordTeacherPo_batch_deleteById" parameterType="java.util.List">
        DELETE FROM diagnosis_record_teacher
        <if test="list.size() > 0">
            where code in
            <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </delete>


    <select id="getTeachingProgressByClasses" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
        dt.CODE,
        dt.diagnosis_name AS diagnosisName,
        dt.school_code AS schoolCode,
        dt.school_name AS schoolName,
        dt.start_time AS startTime,
        dt.end_time AS endTime,
        dt.exam_year AS examYear,
        dt.grade_code AS gradeCode,
        dc.teacher_code AS teacherCode,
        dc.teacher_name AS teacherName,
        dt.unit_code AS unitCode,
        dt.unit_name AS unitName,
        dc.class_code AS classCode,
        dc.class_name AS className
        FROM
        diagnosis_record_teacher dt,
        diagnosis_class_relation dc,
        `diagnosis_resource`.`diagnosis_paper` dp
        WHERE
        dt.`code` = dc.diagnosis_record_code
        AND dp.`code` = dt.diagnosis_paper_code
        AND dt.exam_type = 0
        <if test="unitCodes.size() > 0">
            and dp.unit_code in
            <foreach collection="unitCodes" item="item" index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="districtId != null">
            AND dt.group_area_district_id = #{districtId}
        </if>
        <if test="semester != null">
            AND dt.exam_year = #{semester}
        </if>
        ORDER BY
        dt.school_code,
        dt.`code`,
        dc.class_code
    </select>

    <select id="getDiagnosisListBySubject" parameterType="java.util.Map" resultMap="BaseResultMap">
        SELECT DISTINCT dt.*
        FROM diagnosis_record_teacher dt,diagnosis_class_relation dc
        WHERE dt.`code` = dc.diagnosis_record_code
        <if test="gradeCode != null">
            and dt.grade_code = #{gradeCode}
        </if>
        <if test="subjectCode != null">
            and dc.subject_code = #{subjectCode}
        </if>
        <if test="examScope != null">
            and dt.exam_scope = #{examScope}
        </if>
        <if test="examType != null">
            and dt.exam_type = #{examType}
        </if>
        <if test="examYear != null">
            and dt.exam_year = #{examYear}
        </if>
        <if test="groupAreaDistrictId != null">
            and dt.group_area_district_id = #{groupAreaDistrictId,jdbcType=INTEGER}
        </if>
        ORDER BY dt.create_time DESC
    </select>
</mapper>