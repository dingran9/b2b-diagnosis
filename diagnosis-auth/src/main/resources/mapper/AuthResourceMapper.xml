<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://ibatis.apache.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eedu.auth.dao.AuthResourceDao">

    <resultMap id="AuthResourceMapper" type="com.eedu.auth.beans.AuthResourceBean">
        <result column="resource_id" property="resourceId" jdbcType="INTEGER" />
        <result column="resource_name" property="resourceName" jdbcType="VARCHAR" />
        <result column="resource_url" property="resourceUrl" jdbcType="VARCHAR" />
        <result column="resource_desc" property="resourceDesc" jdbcType="VARCHAR" />
        <result column="resource_parent_id" property="resourceParentId" jdbcType="INTEGER" />
        <result column="resource_sort" property="resourceSort" jdbcType="INTEGER" />
        <result column="resource_type" property="resourceType" jdbcType="INTEGER" />
        <result column="resource_product_id" property="resourceProductId" jdbcType="INTEGER" />
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
        <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
        <result column="resource_icon" property="resourceIcon" jdbcType="VARCHAR" />
    </resultMap>

    <resultMap id="AuthRoleResourceMapper" type="com.eedu.auth.beans.AuthRoleResourceBean">
        <result column="id" property="id" jdbcType="INTEGER" />
        <result column="role_id" property="roleId" jdbcType="INTEGER" />
        <result column="resource_id" property="resourceId" jdbcType="INTEGER" />
    </resultMap>

    <sql id="resource_column_list">
        resource_id,resource_name,resource_url,resource_desc,resource_parent_id,resource_sort,resource_type,resource_product_id,
        create_date,update_date,resource_icon
    </sql>
    <sql id="resource_column_list_join">
        AR.resource_id,AR.resource_name,AR.resource_url,AR.resource_desc,AR.resource_parent_id,AR.resource_sort,AR.resource_type,
        AR.resource_product_id,AR.create_date,AR.update_date,AR.resource_icon
    </sql>

    <!-- 查询所有资源 -->
    <select id="getResourceListByCondition" resultMap="AuthResourceMapper" parameterType="com.eedu.auth.beans.AuthResourceBean">
        SELECT <include refid="resource_column_list"/>
        FROM auth_resource
        WHERE 1=1
        <if test="resourceId != null">
            and resource_id = #{resourceId,jdbcType=VARCHAR}
        </if>
        <if test="resourceName != null">
            and resource_name = #{resourceName,jdbcType=VARCHAR}
        </if>
        <if test="resourceUrl != null">
            and resource_url = #{resourceUrl,jdbcType=VARCHAR}
        </if>
        <if test="resourceDesc != null">
            and resource_desc = #{resourceDesc,jdbcType=INTEGER}
        </if>
        <if test="resourceParentId != null">
            and resource_parent_id = #{resourceParentId,jdbcType=INTEGER}
        </if>
        <if test="resourceSort != null">
            and resource_sort = #{resourceSort,jdbcType=INTEGER}
        </if>
        <if test="resourceType != null">
            and resource_type = #{resourceType,jdbcType=INTEGER}
        </if>
        <if test="resourceProductId != null">
            and resource_product_id = #{resourceProductId,jdbcType=INTEGER}
        </if>
        order by resource_id
    </select>

    <!-- 根据角色Id查询所有菜单资源 -->
    <select id="getResourceListByRoleId" resultMap="AuthResourceMapper" parameterType="java.lang.Integer">
        SELECT <include refid="resource_column_list_join"/>
        FROM auth_role_resource ARR,auth_resource AR
        WHERE ARR.RESOURCE_ID = AR.RESOURCE_ID
        <!--AND AR.RESOURCE_TYPE = 1 -->
        AND ARR.ROLE_ID=#{roleId,jdbcType=INTEGER}
        ORDER BY AR.RESOURCE_SORT
    </select>
    <!-- 修改资源信息 -->
    <update id="updateResource" parameterType="com.eedu.auth.beans.AuthResourceBean">
        update auth_resource
        <set>
            <if test="resourceName != null">
                resource_name=#{resourceName,jdbcType=VARCHAR},
            </if>
            <if test="resourceUrl != null">
                resource_url=#{resourceUrl,jdbcType=VARCHAR},
            </if>
            <if test="resourceDesc != null"> v
                resource_desc=#{resourceDesc,jdbcType=VARCHAR},
            </if>
            <if test="resourceParentId != null">
                resource_parent_id=#{resourceParentId,jdbcType=INTEGER},
            </if>
            <if test="resourceSort != null">
                resource_sort=#{resourceSort,jdbcType=INTEGER},
            </if>
            <if test="resourceType != null">
                resource_type=#{resourceType,jdbcType=INTEGER},
            </if>
            <if test="resourceProductId != null">
                resource_product_id=#{resourceProductId,jdbcType=INTEGER},
            </if>
            update_date=now()
        </set>
        where resource_id=#{resourceId,jdbcType=INTEGER}
    </update>
    <!-- 添加资源信息 -->
    <insert id="addResource" parameterType="com.eedu.auth.beans.AuthResourceBean">
        insert into auth_resource
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="resourceName != null">
                resource_name,
            </if>
            <if test="resourceUrl != null">
                resource_url,
            </if>
            <if test="resourceDesc != null">
                resource_desc,
            </if>
            <if test="resourceParentId != null">
                resource_parent_id,
            </if>
            <if test="resourceSort != null">
                resource_sort,
            </if>
            <if test="resourceType != null">
                resource_type,
            </if>
            <if test="resourceProductId != null">
                resource_product_id,
            </if>
            <if test="resourceIcon != null">
                resource_icon,
            </if>
            create_date,update_date
        </trim>
        <trim prefix="value (" suffix=")" suffixOverrides=",">
            <if test="resourceName != null">
                #{resourceName,jdbcType=VARCHAR},
            </if>
            <if test="resourceUrl != null">
                #{resourceUrl,jdbcType=VARCHAR},
            </if>
            <if test="resourceDesc != null">
                #{resourceDesc,jdbcType=VARCHAR},
            </if>
            <if test="resourceParentId != null">
                #{resourceParentId,jdbcType=INTEGER},
            </if>
            <if test="resourceSort != null">
                #{resourceSort,jdbcType=INTEGER},
            </if>
            <if test="resourceType != null">
                #{resourceType,jdbcType=INTEGER},
            </if>
            <if test="resourceProductId != null">
                #{resourceProductId,jdbcType=INTEGER},
            </if>
            <if test="resourceIcon != null">
                #{resource_icon,jdbcType=VARCHAR},
            </if>
            now(),now()
        </trim>
    </insert>
    <!-- 根据id删除资源信息 -->
    <delete id="deleteResource" parameterType="java.lang.Integer">
        delete from auth_resource where resource_id = #{resourceId,jdbcType=INTEGER}
    </delete>
    <!-- 查询角色和资源的绑定信息 -->
    <select id="getRoleResourceBindInfo" parameterType="com.eedu.auth.beans.AuthRoleResourceBean" resultMap="AuthRoleResourceMapper">
        select id,role_id,resource_id from auth_role_resource
        where 1=1
        <if test="id != null">
            and id = #{id,jdbcType=VARCHAR}
        </if>
        <if test="roleId != null">
            and role_Id = #{roleId,jdbcType=VARCHAR}
        </if>
        <if test="resourceId != null">
            and resource_Id = #{resourceId,jdbcType=INTEGER}
        </if>
    </select>
    <!-- 根据用户ID查询资源信息 -->
    <select id="getResourceByUserId" parameterType="java.lang.Integer" resultMap="AuthResourceMapper">
        SELECT <include refid="resource_column_list"/> FROM auth_resource AR
        WHERE AR.RESOURCE_ID IN
        (
            SELECT DISTINCT ARR.RESOURCE_ID
            FROM auth_role_resource ARR
            WHERE ARR.ROLE_ID IN
            (
                SELECT AUR.ROLE_ID FROM auth_user_role AUR WHERE AUR.USER_ID = #{userId,jdbcType=INTEGER}
            )
        )
        ORDER BY RESOURCE_SORT
    </select>

    <!-- 根据角色id删除角色对应资源信息 -->
    <delete id="deleteRoleResourceByRoleId" parameterType="java.lang.Integer">
        delete from auth_role_resource where role_id = #{id,jdbcType=INTEGER}
    </delete>

    <!-- 添加角色和资源的绑定关系 -->
    <insert id="addRoleResourceInfo" parameterType="java.util.HashMap" useGeneratedKeys="true" keyProperty="id">
        insert into auth_role_resource(role_id,resource_id) values(#{roleId,jdbcType=INTEGER},#{resourceId,jdbcType=INTEGER})
    </insert>
</mapper>